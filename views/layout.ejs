<!DOCTYPE html>
<html>
  <head>
    <!--SCRIPTS-->
    <script src="/linker/js/jquery.min.js"></script>
    <script src="/linker/js/bootstrap.min.js"></script>
    <!--SCRIPTS END-->

    <!--STYLES-->
    <link rel="stylesheet" href="/linker/styles/bootstrap-theme.min.css">
    <link rel="stylesheet" href="/linker/styles/bootstrap.min.css">
    <!--STYLES END-->

    <!--TEMPLATES-->
    
    <!--TEMPLATES END-->

    <title><%- title %></title>

    <!-- Viewport mobile tag for sensible mobile support -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1" />

    <script src="//cdnjs.cloudflare.com/ajax/libs/underscore.js/1.4.4/underscore-min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/backbone.js/1.0.0/backbone-min.js"></script>

  </head>
  <body>

    <div class="container">
      <%- include partials/navbar.ejs %>

      <!-- Include the view file for the current controller/route -->
      <%- body %>

      <hr class="featurette-divider">

      <%- include partials/footer.ejs %>

      <!--

        Client-side Javascript
        ========================

        You can import any js files in your `assets` directory as you would
        normally: using <script></script> tags.

        Here's an example of importing a few dependencies, in order:
      -->
      <!-- Bring in the socket.io client -->
      <script type="text/javascript" src="/js/socket.io.js"></script>
      <!-- then beef it up with some convenience logic for talking to Sails.js -->
      <script type="text/javascript" src="/js/sails.io.js"></script>
      <!-- listen on socket.io for incoming messages -->
      <script type="text/javascript" src="/js/app.js"></script>

      <!-- Your scripts here? -->
      <!-- Your scripts here? -->
      <!-- Your scripts here? -->


      <!--

        Looking for client-side CoffeeScript or TypeScript?
        ================================================

        CoffeeScript and TypeScript precompilation are not installed by default,
        but if you'd like to mix those features in, it is straightforward to
        `npm install` the relevant grunt community modules and modify your Gruntfile
        to use them.

      -->



      <!--

        Another way: The Asset Linker
        ========================

        Sails supports a Grunt-based asset linker, to automatically inject
        <link> and <script> tags, as well any client-side templates you're using
        into your HTML layouts and views, respecting dependencies.

        You created this Sails app with the asset linker disabled.
        If you change your mind, check out the docs on the subject:
        http://sailsjs.org/#!documentation/asset-management

      -->


        <script>
            $("#loginButton").click(function(){
                var username = $("#loginName").val();
                var password = $("#loginPassword").val();
                if (username && password) {
                    $.post(
                        '/login',
                        {username: username, password:password},
                        function () {
                            window.location = "/chat";
                        }
                    ).fail(function(res){
                        alert("Error: " + res.getResponseHeader("error"));
                    });
                } else {
                    alert("A username and password is required");
                }
            });

            $("#signupButton").click(function(){
      var username = $("#signupName").val();
      var password = $("#signupPassword").val();
      var confirmPassword = $("#signupConfirmPassword").val();
      if (username && password) {
          if (password === confirmPassword) {
              $.post(
                  '/signup',
                  {username: username, password:password},
                  function () {
                      window.location = "/chat";
                  }
              ).fail(function(res){
                  alert("Error: " + res.getResponseHeader("error"));
              });
          } else {
              alert("Passwords don't match");
          }
      } else {
          alert("A username and password is required");
      }
  });
        </script>
      </div>
    </body>
</html>
